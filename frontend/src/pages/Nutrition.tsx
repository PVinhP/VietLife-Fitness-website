import React, { useEffect, useState } from 'react'
import Img5 from "../Assests/Img5.jpg"
import useDebounce from "../hook/useDebounce"
import NutritientsIntake from './NutritientsIntake'
import bot from "../images/chatbot.png"
import { useNavigate } from 'react-router-dom'

interface searchList {
    id: number;
    food_name: string;
    calories: number;
    water_g: number;
    protein_g: number;
    fats_g: number;
    carbs_g: number;
    fiber_g: number;
}

interface Lesson {
    id: number;
    tieu_de: string;
    hinh_anh: string;
    tom_tat: string;
    noi_dung: string;
    loai: string;
    ngay_tao: string;
}

function Nutrition() {
    const navigate = useNavigate()
    const [Query, setQuery] = useState("");
    const [list, setList] = useState<searchList[]>([]);
    const [lessons, setLessons] = useState<Lesson[]>([]);
    const [activeCategory, setActiveCategory] = useState<string>("coban");
    const searchResults = useDebounce(Query, 1000)

    // Fetch lessons from API
    useEffect(() => {
        fetch(`https://backend-rjhh.onrender.com/lesson`, {
            method: "GET",
            headers: {
                "Content-type": "application/json"
            }
        })
        .then((res) => res.json())
        .then((res) => {
            if (Array.isArray(res)) {
                setLessons(res);
            } else if (res && res.data && Array.isArray(res.data)) {
                setLessons(res.data);
            } else {
                setLessons([]);
            }
        })
        .catch((error) => {
            console.error("L·ªói khi t·∫£i b√†i h·ªçc:", error);
            setLessons([]);
        });
    }, []);

    // Search nutrition
    useEffect(() => {
        if (!searchResults.trim()) {
            setList([]);
            return;
        }

        fetch(`https://backend-rjhh.onrender.com/nutrition/search?name=${searchResults}`, {
            method: "GET",
            headers: {
                "Content-type": "application/json"
            }
        })
        .then((res) => res.json())
        .then((res) => {
            if (Array.isArray(res)) {
                setList(res);
            } else if (res && res.data && Array.isArray(res.data)) {
                setList(res.data);
            } else {
                setList([]);
            }
        })
        .catch((error) => {
            console.error("L·ªói khi t√¨m ki·∫øm:", error);
            setList([]);
        });
    }, [searchResults]);

    // Filter lessons by category
    const filteredLessons = lessons.filter(lesson => lesson.loai === activeCategory);

    // Navigate to lesson detail
    const handleLessonClick = (lessonId: number) => {
        navigate(`/lesson/${lessonId}`);
    };

    const renderLessonCard = (lesson: Lesson) => (
        <div 
            key={lesson.id} 
            className="bg-white rounded-lg p-6 cursor-pointer hover:bg-gray-50 transition-all duration-300 hover:scale-105 shadow-md"
            onClick={() => handleLessonClick(lesson.id)}
        >
            <div className="flex items-start space-x-4">
                <div className="flex-shrink-0">
                    <div className="w-16 h-16 bg-gradient-to-br from-teal-400 to-blue-500 rounded-lg flex items-center justify-center">
                        <span className="text-2xl">
                            {lesson.loai === 'coban' ? 'üìö' : 'üí™'}
                        </span>
                    </div>
                </div>
                <div className="flex-1 min-w-0">
                    <h3 className="text-xl font-bold text-gray-900 mb-2 hover:text-teal-500 transition-colors">
                        {lesson.tieu_de}
                    </h3>
                    <p className="text-gray-600 text-sm leading-6 mb-3">
                        {lesson.tom_tat}
                    </p>
                    <div className="flex items-center justify-between">
                        <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-teal-100 text-teal-800">
                            {lesson.loai === 'coban' ? 'C∆° b·∫£n' : 'T·∫≠p luy·ªán'}
                        </span>
                        <span className="text-teal-500 text-sm hover:text-teal-600">
                            ƒê·ªçc th√™m ‚Üí
                        </span>
                    </div>
                </div>
            </div>
        </div>
    );

    return (
        <div className="bg-gray-100 min-h-screen">
            {/* Header Section */}
            <div className="overflow-hidden px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0">
                <div className="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10">
                    <div className="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8">
                        <div className="lg:pr-4">
                            <div className="lg:max-w-lg">
                                <p className="text-base font-semibold leading-7 text-teal-500">VietLife</p>
                                <h1 className="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">Dinh d∆∞·ª°ng</h1>
                                <p className="mt-6 text-gray-600 text-xl leading-8">
                                    M·ªôt ch·∫ø ƒë·ªô ƒÉn c√¢n ƒë·ªëi cung c·∫•p ƒë·∫ßy ƒë·ªß nƒÉng l∆∞·ª£ng c·∫ßn thi·∫øt ƒë·ªÉ duy tr√¨ ho·∫°t ƒë·ªông c·∫£ ng√†y, 
                                    c√°c ch·∫•t dinh d∆∞·ª°ng c·∫ßn thi·∫øt cho s·ª± ph√°t tri·ªÉn v√† ph·ª•c h·ªìi, gi√∫p b·∫°n kh·ªèe m·∫°nh v√† ph√≤ng ng·ª´a b·ªánh t·∫≠t.
                                </p>
                                
                                {/* Search Bar */}
                                <div className="mt-8">
                                    <h2 className="text-2xl font-bold text-gray-900 mb-4">üîç T√¨m ki·∫øm gi√° tr·ªã dinh d∆∞·ª°ng</h2>
                                    <input 
                                        className="w-full p-3 border border-gray-300 bg-white text-gray-900 rounded-lg placeholder:text-gray-400 focus:ring-2 focus:ring-teal-500 focus:border-transparent" 
                                        type="text" 
                                        placeholder='Nh·∫≠p t√™n th·ª±c ph·∫©m (VD: th·ªãt g√†, c∆°m, tr·ª©ng...)'
                                        value={Query}
                                        onChange={(e) => setQuery(e.target.value)} 
                                    />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className="-ml-12 -mt-12 p-12 lg:sticky lg:top-4 lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:overflow-hidden">
                        <img className="w-[48rem] max-w-none rounded-xl bg-white shadow-xl ring-1 ring-gray-300 sm:w-[57rem]" src={Img5} alt="Dinh d∆∞·ª°ng" />
                    </div>
                </div>

                {/* Search Results */}
                {Query.trim() && (
                    <div className="max-w-7xl mx-auto px-8 mt-8">
                        <div className="bg-white rounded-lg p-6 shadow-md">
                            {list.length > 0 ? (
                                <>
                                    <p className="text-base font-semibold leading-7 text-teal-500 mb-4">
                                        üìä Gi√° tr·ªã dinh d∆∞·ª°ng (t√≠nh cho 100g th·ª±c ph·∫©m)
                                    </p>
                                    {list.map((item, i) => (
                                        <div key={i} className="mb-6">
                                            <h3 className="text-2xl font-bold text-gray-900 mb-4 text-center">{item.food_name}</h3>
                                            <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                                                <div className="bg-gradient-to-r from-red-500 to-red-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">Calo</div>
                                                    <div className="text-white text-2xl">{item.calories}</div>
                                                </div>
                                                <div className="bg-gradient-to-r from-blue-500 to-blue-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">Protein</div>
                                                    <div className="text-white text-2xl">{item.protein_g}g</div>
                                                </div>
                                                <div className="bg-gradient-to-r from-green-500 to-green-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">Carbs</div>
                                                    <div className="text-white text-2xl">{item.carbs_g}g</div>
                                                </div>
                                                <div className="bg-gradient-to-r from-yellow-500 to-yellow-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">Ch·∫•t b√©o</div>
                                                    <div className="text-white text-2xl">{item.fats_g}g</div>
                                                </div>
                                                <div className="bg-gradient-to-r from-teal-500 to-teal-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">Ch·∫•t x∆°</div>
                                                    <div className="text-white text-2xl">{item.fiber_g}g</div>
                                                </div>
                                                <div className="bg-gradient-to-r from-cyan-500 to-cyan-600 p-4 rounded-lg text-center">
                                                    <div className="text-white font-bold text-lg">N∆∞·ªõc</div>
                                                    <div className="text-white text-2xl">{item.water_g}g</div>
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                </>
                            ) : (
                                <div className="text-center py-8">
                                    <div className="text-6xl mb-4">üîç</div>
                                    <h3 className="text-xl font-bold text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
                                    <p className="text-gray-600 mb-4">
                                        Kh√¥ng t√¨m th·∫•y th√¥ng tin dinh d∆∞·ª°ng cho "{Query}"
                                    </p>
                                    <div className="bg-gray-50 rounded-lg p-4 max-w-md mx-auto shadow-sm">
                                        <p className="text-teal-500 font-semibold mb-2">üí° G·ª£i √Ω t√¨m ki·∫øm:</p>
                                        <ul className="text-gray-600 text-sm space-y-1">
                                            <li>‚Ä¢ Th·ª≠ t√™n ƒë∆°n gi·∫£n h∆°n (VD: "g√†" thay v√¨ "g√† r√°n")</li>
                                            <li>‚Ä¢ Ki·ªÉm tra ch√≠nh t·∫£</li>
                                            <li>‚Ä¢ Th·ª≠ t·ª´ kh√≥a ti·∫øng Vi·ªát ho·∫∑c ti·∫øng Anh</li>
                                            <li>‚Ä¢ VD: th·ªãt g√†, c∆°m, tr·ª©ng, b√°nh m√¨, s·ªØa...</li>
                                        </ul>
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                )}

                {/* Lesson Categories */}
                <div className="max-w-7xl mx-auto px-8 mt-16">
                    <div className="text-center mb-12">
                        <h2 className="text-4xl font-bold text-gray-900 mb-4">üìö H·ªá th·ªëng b√†i h·ªçc dinh d∆∞·ª°ng</h2>
                        <p className="text-xl text-gray-600">T·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao - X√¢y d·ª±ng n·ªÅn t·∫£ng ki·∫øn th·ª©c v·ªØng ch·∫Øc</p>
                    </div>

                    {/* Category Tabs */}
                    <div className="flex justify-center mb-8">
                        <div className="bg-white rounded-lg p-2 shadow-md">
                            <button
                                onClick={() => setActiveCategory("coban")}
                                className={`px-6 py-3 mr-2 rounded-lg font-semibold transition-all ${
                                    activeCategory === "coban" 
                                        ? "bg-teal-500 text-white" 
                                        : "text-gray-600 hover:text-gray-900"
                                }`}
                            >
                                üìñ Ki·∫øn th·ª©c c∆° b·∫£n
                            </button>
                            <button
                                onClick={() => setActiveCategory("tapluyen")}
                                className={`px-6 py-3 rounded-lg font-semibold transition-all ${
                                    activeCategory === "tapluyen" 
                                        ? "bg-teal-500 text-white" 
                                        : "text-gray-600 hover:text-gray-900"
                                }`}
                            >
                                üí™ Dinh d∆∞·ª°ng & T·∫≠p luy·ªán
                            </button>
                        </div>
                    </div>

                    {/* Lessons Grid */}
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        {filteredLessons.length > 0 ? (
                            filteredLessons.map(renderLessonCard)
                        ) : (
                            <div className="col-span-full text-center py-12">
                                <div className="text-6xl mb-4">üìñ</div>
                                <h3 className="text-xl font-bold text-gray-900 mb-2">Ch∆∞a c√≥ b√†i h·ªçc</h3>
                                <p className="text-gray-600">
                                    B√†i h·ªçc cho danh m·ª•c n√†y ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t
                                </p>
                            </div>
                        )}
                    </div>
                </div>

                {/* Quick Tips Section */}
                <div className="max-w-7xl mx-auto px-8 mt-16">
                    <div className="bg-gradient-to-r from-teal-500 to-blue-500 rounded-lg p-8 shadow-lg">
                        <h2 className="text-3xl font-bold text-white mb-6 text-center">üí° L·ªùi khuy√™n nhanh</h2>
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                            <div className="bg-white/90 rounded-lg p-4 text-center shadow-sm">
                                <div className="text-4xl mb-2">ü•ó</div>
                                <h3 className="font-bold text-gray-900 mb-2">ƒÇn ƒëa d·∫°ng</h3>
                                <p className="text-gray-600 text-sm">K·∫øt h·ª£p nhi·ªÅu m√†u s·∫Øc trong b·ªØa ƒÉn</p>
                            </div>
                            <div className="bg-white/90 rounded-lg p-4 text-center shadow-sm">
                                <div className="text-4xl mb-2">üíß</div>
                                <h3 className="font-bold text-gray-900 mb-2">U·ªëng ƒë·ªß n∆∞·ªõc</h3>
                                <p className="text-gray-600 text-sm">2-3 l√≠t/ng√†y t√πy ho·∫°t ƒë·ªông</p>
                            </div>
                            <div className="bg-white/90 rounded-lg p-4 text-center shadow-sm">
                                <div className="text-4xl mb-2">‚è∞</div>
                                <h3 className="font-bold text-gray-900 mb-2">ƒÇn ƒë√∫ng gi·ªù</h3>
                                <p className="text-gray-600 text-sm">Duy tr√¨ nh·ªãp sinh h·ªçc ·ªïn ƒë·ªãnh</p>
                            </div>
                            <div className="bg-white/90 rounded-lg p-4 text-center shadow-sm">
                                <div className="text-4xl mb-2">üèÉ‚Äç‚ôÇÔ∏è</div>
                                <h3 className="font-bold text-gray-900 mb-2">K·∫øt h·ª£p v·∫≠n ƒë·ªông</h3>
                                <p className="text-gray-600 text-sm">Dinh d∆∞·ª°ng + t·∫≠p luy·ªán = hi·ªáu qu·∫£</p>
                            </div>
                        </div>
                    </div>
                </div>

                <NutritientsIntake />
            </div>

            {/* Chat Bot */}
            <div onClick={() => navigate("/expert")} className='bg-white cursor-pointer'>
                <img 
                    style={{ 
                        float: 'right', 
                        width: "87px", 
                        fontSize: "70px", 
                        marginRight: "-18%", 
                        position: "fixed", 
                        top: "70%", 
                        left: "93.3%" 
                    }} 
                    src={bot} 
                    alt="Chatbot h·ªó tr·ª£" 
                />
            </div>
        </div>
    )
}

export default Nutrition